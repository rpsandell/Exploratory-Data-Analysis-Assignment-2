print(ggplot(final_plot,aes(x=x,y=value,fill=variable)) +
geom_bar(stat="identity",position = "dodge", alpha=.3), bw=T)
View(final_plot)
names(final_plot) <- c("Occurrences in Corpus", "Accent Type", "Number of Lexemes")
View(final_plot)
final_plot$Accent Type <- which(final_plot$Accent Type=="y1") <- "Accent on [-ró-]"
final_plot$Accent_Type <- which(final_plot$Accent_Type=="y1") <- "Accent on [-ró-]"
final_plot[which(final_plot$Accent_Type=="y1"), ]$Accent_Type <- "Accent on [-ró-]"
final_plot[which(final_plot$Accent_Type=="y1"), ]$Accent_Type
final_plot[which(final_plot$Accent_Type=="y1"), ]
final_plot[which(final_plot$Accent_Type==y1), ]
final_plot$"Accent Type"
final_plot$"Accent Type"[1:7, ] <- "Accent on [-ró-]"
final_plot[1:7, ]$"Accent Type" <- "Accent on [-ró-]"
View(final_plot)
final_plot[1:7, ]$"Accent Type"
final_plot[1:7, ]$"Accent Type" <- as.factor("Accent on [-ró-]")
as.character(final_plot[1:7, ]$"Accent Type") <- "Accent on [-ró-]"
print(ggplot(final_plot,aes(x="Occurrences in Corpus",y="Number of Lexemes",fill="Accent Type")) +
+           geom_bar(stat="identity",position = "dodge", alpha=.3), bw=T)
print(ggplot(final_plot,aes(x="Occurrences in Corpus",y="Number of Lexemes",fill="Accent Type")) + geom_bar(stat="identity",position = "dodge", alpha=.3), bw=T)
final_plot[1:7, ]$"Accent Type" <- y1
final_plot[1:7, ]$"Accent Type" <- "y1"
print(ggplot(final_plot,aes(x="Occurrences in Corpus",y="Number of Lexemes",fill="Accent Type")) + geom_bar(stat="identity",position = "dodge", alpha=.3), bw=T)
barplot(y1)
barplot(y1, border="red")
par(new=TRUE)
barplot(y2, border="blue")
barplot(matrix(c(5,3,8,9),nr=2), beside=T,
col=c("aquamarine3","coral"),
names.arg=LETTERS[1:2])
barplot(matrix(c(5,5,1,1,0,0,3,9,16,3,1,0,1),nr=2), beside=T,
col=c("aquamarine3","coral"),
names.arg=LETTERS[1:2])
barplot(matrix(c(5,5,1,1,0,0,3,9,16,3,1,1,0,1),nr=2), beside=T,
col=c("aquamarine3","coral"),
names.arg=LETTERS[1:2])
barplot(matrix(c(5,5,1,1,0,0,3,9,16,3,1,1,0,1),nr=2), beside=T,
col=c("aquamarine3","coral"),
names.arg=LETTERS[1:7])
barplot(matrix(c(5,9,5,16,0,0,3,9,16,3,1,1,0,1),nr=2), beside=T,
col=c("aquamarine3","coral"),
names.arg=LETTERS[1:7])
barplot(matrix(c(5,9,5,16,1,3,1,1,0,1,0,0,3,1),nr=2), beside=T,
col=c("gray","black"),
names.arg=LETTERS[1:7])
barplot(matrix(c(5,9,5,16,1,3,1,1,0,1,0,0,3,1),nr=2), beside=T,
col=c("gray","black"),
names.arg=x)
barplot(matrix(c(5,9,5,16,1,3,1,1,0,1,0,0,3,1),nr=2), beside=T,
col=c("gray","black"),
names.arg=x, xlab="Occurrences in Corpus", ylab="Number of Lexemes")
barplot(matrix(c(5,9,5,16,1,3,1,1,0,1,0,0,3,1),nr=2), beside=T,
col=c("gray","black"),
names.arg=x, xlab="Occurrences in Corpus", ylab="Number of Lexemes", legend=c("Accent on [-ró-]", "Recessive"))
pdf()
barplot(matrix(c(5,9,5,16,1,3,1,1,0,1,0,0,3,1),nr=2), beside=T,
col=c("gray","black"),
names.arg=x, xlab="Occurrences in Corpus", ylab="Number of Lexemes", legend=c("Accent on [-ró-]", "Recessive"))
dev.off()
pdf("roAccent.pdf")
barplot(matrix(c(5,9,5,16,1,3,1,1,0,1,0,0,3,1),nr=2), beside=T,
col=c("gray","black"),
names.arg=x, xlab="Occurrences in Corpus", ylab="Number of Lexemes", legend=c("Accent on [-ró-]", "Recessive"))
dev.off()
warnings()
barplot(matrix(c(5,9,5,16,1,3,1,1,0,1,0,0,3,1),nr=2), beside=T,
col=c("gray","black"),
names.arg=c("0", "1-100", "101-200", "201-300", "301-400", "401-500", ">500"), xlab="Occurrences in Corpus", ylab="Number of Lexemes", legend=c("Accent on [-ró-]", "Recessive"))
pdf("roAccent.pdf")
barplot(matrix(c(5,9,5,16,1,3,1,1,0,1,0,0,3,1),nr=2), beside=T,
col=c("gray","black"),
names.arg=c("0", "1-100", "101-200", "201-300", "301-400", "401-500", ">500"), xlab="Occurrences in Corpus", ylab="Number of Lexemes", legend=c("Accent on [-ró-]", "Recessive"))
dev.off()
117+42+15+151
14/865
14/868
14/45
1477/6
246*2
1598/6
266.3*2
1730/6
288.33*2
library(datasets)
data(iris)
mean(iris$Sepal.Length)
View(iris)
mean(iris[Species=="virginica", ]$Sepal.Length)
mean(iris[iris$Species=="virginica", ]$Sepal.Length)
apply(iris[, 1:4], 1, mean)
apply(iris[, 1:4], 2, mean)
?apply
data(mtcars)
?mtcars
tapply(mtcars$cyl, mtcars$mpg, mean)
?tapply
apply(mtcars, 2, mean)
?split
sapply(split(mtcars$mpg, mtcars$cyl), mean)
?sapply
26.66364-15.10000
?ls
ls
debug(ls)
ls()
quit()
debug(ls)
ls(home)
sapply(mtcars, cyl, mean)
library(datasets)
data(mtcars)
sapply(mtcars, cyl, mean)
attach(mtcars)
libary(datasets)
library(datasets)
data(mtcars)
tapply(mtcars$cyl, mtcars$mpg, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
?ls
View(mtcars)
26.66364-15.10000
split(mtcars, mtcars$cyl)
tapply(mtcars$hp, mtcars$cyl, mean)
209.21429-82.63636
data(iris)
apply(iris[, 1:4], 2, mean)
?str
str(args)
str(1:2)
str(1:12)
ls()
x <- c("HI!")
ls()
x
rm(list=ls())
6/3500
6/159
1441/6
240*2
480/6
2200/6
366*2
736/6
366/6
1441/6
240/6
1121/6
186.8333/6
2200/6
366.6667/6
library(dplyr)
packageVersion(dplyr)
swirl()
library(swirl)
swirl()
cran <- tbl_df(mydf)
mydf <- read.csc(path2csv, stringsAsFactors=FALSE)
mydf <- read.csv(path2csv, stringsAsFactors=FALSE)
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500 & r_os == "linux-gnu")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, r_version == !is.na())
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size+1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(cran, package)
by_package
summarize(cran, mean(size))
summarize(by_package, mean(size))
submit()
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts = filter(pack_sum, count > 679)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs=0.99)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
cran %>%
select(ip_id, country, package, size) %>%
print
cran %>% select(ip_id)
submit()
submit()
submit()
submit()
install.package("tidyr")
install.packages("tidyr")
install.packages("tidyr")
library(swirl)
install.packages("swirl")
install.packages("dplyr")
library(swirl)
swirl()
install_from_swirl("Getting and Cleaning Data")
swirl()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res <- gather(students2, sex_class, count, -grade)
res
?separate()
?separate
separate(res, col=sex_class, into=c("sex", "class"))
submit()
students_3
students3
submit()
?spread
submit()
submit()
submit()
submit()
submit()
extract_numeric("class5")
?mutate
submit()
submit()
extract_numeric(class)
students3 %>%
gather(class, grade, class1:class5, na.rm = TRUE) %>%
spread(test, grade) %>%
mutate(class = extract_numeric(class)) %>% print
submit()
students4
submit()
submit()
submit()
passed
failed
passed <- mutate(passed, status = "passed")
failed <- mutate(failed, status = "failed")
bind_rows(passed, failed)
sat
?contains
submit()
submit()
submit()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package=lubridate)
library(swirl)
swirl()
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label=TRUE)
this_moment <- now()
this_moment
hour(this_moment)
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920-1-2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment, now())
this_moment <- update(this_moment, hours=10, minutes=16, seconds=0)
this_moment
nyc <- now("America/New_York")
nyc
depart <- nyc +days(2)
depart
depart <- update(depart, hours=17, minutes=34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive, "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", "Asia/Singapore")
last_time <- mdy("June 17 2008", "Asia/Singapore")
last_time <- mdy("June 17 2008", tz="Asia/Singapore")
last_time <- mdy("June 17 2008")
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?new_interval
how_long <- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
110*20
75*20
18*20
18*75
110*19
matp2 <- matrix(c(1,25,180,625), ncol=2)
matp2
chisq.test(matp2)
4/25
314/625
matp3 <- matrix(c(4,25,314,625), ncol=2)
matp3
chisq.test(matp3)
1.75*3
1.75*4
1.75*8
29+13+18
332-60
254/12
sample <- matrix(c(0,1/3, 1/3,1/3,1/2,0,0,1/2,0,1/2,1/2,0,0,1/2,1/2,0), nrow=4, ncol=4)
sample
sample^2
sample^2*matrix(c(1/4,1/4,1/4,1/4))
matrix(c(1/4,1/4,1/4,1/4))
??matrix
sample^2%*%matrix(c(1/4,1/4,1/4,1/4))
sample^50%*%matrix(c(1/4,1/4,1/4,1/4))
sample%*%matrix(c(1/4,1/4,1/4,1/4))
5/24
sample
sample <- matrix(c(0,1/3, 1/3,1/3,1/2,0,0,1/2,1,0,0,0,0,1/2,1/2,0), nrow=4, ncol=4)
sample
sample%*%matrix(c(1/4,1/4,1/4,1/4))
matrix(c(1/4,1/4,1/4,1/4))%*%sample%*%sample
matrix(c(1/4,1/4,1/4,1/4))%*%sample
sample
sample%*%matrix(c(1/4,1/4,1/4,1/4))
sample%*%matrix(c(1/4,1/4,1/4,1/4))%*%sample
9/2
9/24
library(lattice)
library(datasets)
xyplot(Ozone ~ Wind, data=airquality)
airquality <- transform(airquality, Month = factor(month))
airquality <- transform(airquality, Month = factor(Month))
xyplot(Ozone ~ Wind | Month, data =airquality, layout = c(5,1))
set.seed(10)
x <- rnorm(100)
f <- rep(0:1, each=50)
y <- x  + f - f * x + rnorm(100, sd=0.5)
f <- factor(f, labels = c("Group 1", "Group 2"))
plot(y ~ x | f layout = c(2,1))
plot(y ~ x | f, layout = c(2,1))
xyplot(y ~ x | f, layout = c(2,1))
xyplot(y ~ x | f, panel = function(x,y, ...){panel.xyplot(x,y, ...); panel.abline(h=median(y), lty=2)})
xyplot(y ~ x | f, panel = function(x,y, ...){panel.xyplot(x,y, ...); panel.lmline(x,y, col=2)})
library(ggplot2)
str(mpg)
ggplot2(disp, hwy, data=mpg)
qplot(disp, hwy, data=mpg)
qplot(displ, hwy, data=mpg)
qplot(displ, hwy, data=mpg, color=drv)
qplot(displ, hwy, data=mpg, color=drv, geom=c("point", "smooth"))
qplot(displ, hwy, data=mpg, geom=c("point", "smooth"))
qplot(hwy, data=mpg, color=drv)
qplot(hwy, data=mpg, filled.contour()=drv)
qplot(hwy, data=mpg, fill=drv)
qplot(displ, hwy, data=mpg, facets = .~drv)
qplot(hwy, data=mpg, facets = .~drv, binwidth=2)
str(maacs)
ggplot(mpg, aes(displ, hwy))
g <- ggplot(maacs, aes(displ, hwy))
g <- ggplot(mpg, aes(displ, hwy))
summary(g)
p <- g + geom_point()
print(p)
p <- g + geom_point() + geom_smooth
p <- g + geom_point() + geom_smooth()
print(p)
p <- g + geom_point() + facet_grid(. ~ color), geom_smooth(method="lm")
p <- g + geom_point() + facet_grid(. ~ color) + geom_smooth(method="lm")
str(mpg)
p <- g + geom_point() + facet_grid(. ~ drv) + geom_smooth(method="lm")
p <- g + geom_point(color="steelblue", size=4, alpha=1/2) + facet_grid(. ~ drv) + geom_smooth(method="lm")
p <- g + geom_point(color="steelblue", size=4, alpha=1/2)
print(p)
p <- g + geom_point(color="steelblue", size=4, alpha=1/2) + facet_grid(. ~ drv) + geom_smooth(method="lm")
print(p)
p <- g + geom_point(aes=drv)
p <- g + geom_point(aes(color=drv))
print(p)
p <- g + geom_point(aes(color=drv)) + theme_bw(base_family="Times")
print(p)
library(nlme)
xyplot(weight ~ time | Diet, BodyWeight)
xyplot(weight ~ Time | Diet, BodyWeight)
lines(weight)
xyplot(weight ~ Time | Diet, BodyWeight)
lines(Time)
points(400)
xyplot(weight ~ Time | Diet, BodyWeight)
print(xyplot(weight ~ Time | Diet, BodyWeight))
?trellis.par.set
data(airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
NEI <- readRDS("summarySCC_PM25.rds")
setwd("/Users/rpsandell/Desktop/Programming and Statistics/EDA/Assignment2")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
NEI.rows.cars <- grep("$22010|$22300|$220107|$223007", NEI$SCC) # SCC codes from http://www3.epa.gov/ttn/chief/net/2008neiv3/2008_neiv3_tsd_draft.pdf, page 113
NEI.rows.cars <- grep("^22010|^22300|^220107|^223007", NEI$SCC) # SCC codes from http://www3.epa.gov/ttn/chief/net/2008neiv3/2008_neiv3_tsd_draft.pdf, page 113
NEI.cars <- NEI[NEI.rows.cars, ]
NEI.baltimore.cars <- NEI.cars[which(NEI.cars$fips=="24510"), ]
qplot(year, Emissions, data=NEI.baltimore.cars, facets=.~type, xlab="Emissions", ylab="Year", main="Fine Particulate Matter (PM2.5) Emissions from Motor Vehicles
in Baltimore City (1999–2008)")
library(ggplot2)
qplot(year, Emissions, data=NEI.baltimore.cars, facets=.~type, xlab="Emissions", ylab="Year", main="Fine Particulate Matter (PM2.5) Emissions from Motor Vehicles
in Baltimore City (1999–2008)")
scc.rows.coal <- grep("Coal Combustion", SCC$Short.Name)
scc.rows.coal <- grep("Coal", SCC$Short.Name)
scc.coal.codes <- SCC[scc.rows.coal, ]$SCC
scc.row.coalcombustion <- grep("Combustion" , scc.coal.codes)
View(SCC)
scc.rows.coal <- grep("Coal", SCC$EI.Sector)
scc.coal.codes <- SCC[scc.rows.coal, ]$SCC
us.coal.emissions <- NEI[which(NEI$SCC %in% scc.coal.codes), ] # may take a few seconds to run
length(scc.coal.codes)
library(ggplot2)
png(file="Plot4.png")
qplot(year, Emissions, data=us.coal.emissions, xlab="Emissions", ylab="Year", main="Fine Particulate Matter (PM2.5) Emissions from Coal
in the United States (1999–2008)")
dev.off()
scc.coal.codes
png(file="Plot4.png")
qplot(year, Emissions, data=us.coal.emissions, xlab="Emissions", ylab="Year", main="Fine Particulate Matter (PM2.5) Emissions from Coal
in the United States (1999–2008)")
dev.off()
NEI.rows.cars <- grep("^22010|^22300|^220107|^223007", NEI$SCC) # SCC codes from http://www3.epa.gov/ttn/chief/net/2008neiv3/2008_neiv3_tsd_draft.pdf, page 113
NEI.cars <- NEI[NEI.rows.cars, ]
NEI.baltimore.cars <- NEI.cars[which(NEI.cars$fips=="24510"), ]
library(ggplot2)
png(file="Plot5.png")
qplot(year, Emissions, data=NEI.baltimore.cars, facets=.~type, xlab="Emissions", ylab="Year", main="Fine Particulate Matter (PM2.5) Emissions from Motor Vehicles
in Baltimore City (1999–2008)")
dev.off()
NEI.rows.cars <- grep("^22010|^22300|^220107|^223007", NEI$SCC) # SCC codes from http://www3.epa.gov/ttn/chief/net/2008neiv3/2008_neiv3_tsd_draft.pdf, page 113
NEI.cars <- NEI[NEI.rows.cars, ]
NEI.baltimoreAndLA.cars <- NEI.cars[which(NEI.cars$fips==c("24510","06037"), ]
NEI.baltimoreAndLA.cars <- NEI.cars[which(NEI.cars$fips=="24510" | NEI.cars$fips=="06037"), ]
View(NEI.baltimoreAndLA.cars)
qplot(year, Emissions, data=NEI.baltimoreAndLA.cars, facets=.~fips, xlab="Emissions", ylab="Year", main="Fine Particulate Matter (PM2.5) Emissions from Motor Vehicles
in Baltimore City (1999–2008)")
qplot(year, Emissions, data=NEI.baltimoreAndLA.cars, facets=.~fips, xlab="Emissions", ylab="Year", main="Fine Particulate Matter (PM2.5) Emissions from Motor Vehicles
in Los Angeles and Baltimore City (1999–2008)")
levels(NEI.baltimoreAndLA.cars$fips)
str(NEI.baltimoreAndLA.cars)
str(NEI.baltimoreAndLA.cars$fips)
?gsub
gsub("24510", "Baltimore City", NEI.baltimoreAndLA.cars$fips)
gsub("06037", "Los Angeles", NEI.baltimoreAndLA.cars$fips)
View(NEI.baltimoreAndLA.cars)
NEI.baltimoreAndLA.cars$fips <- gsub("24510", "Baltimore City", NEI.baltimoreAndLA.cars$fips)
NEI.baltimoreAndLA.cars$fips <- gsub("06037", "Los Angeles", NEI.baltimoreAndLA.cars$fips)
View(NEI.baltimoreAndLA.cars)
png(file="Plot6.png")
qplot(year, Emissions, data=NEI.baltimoreAndLA.cars, facets=.~fips, xlab="Emissions", ylab="Year", main="Fine Particulate Matter (PM2.5) Emissions from Motor Vehicles
in Los Angeles and Baltimore City (1999–2008)")
dev.off()
qplot(year, Emissions, data=NEI.baltimoreAndLA.cars, facets=.~fips, xlab="Emissions", ylab="Year", main="Fine Particulate Matter (PM2.5) Emissions from Motor Vehicles
in Los Angeles and Baltimore City (1999–2008)")
png(file="Plot6.png")
qplot(year, Emissions, data=NEI.baltimoreAndLA.cars, facets=.~fips, xlab="Emissions", ylab="Year", main="Fine Particulate Matter (PM2.5) Emissions from Motor Vehicles
in Los Angeles and Baltimore City (1999–2008)")
dev.off()
